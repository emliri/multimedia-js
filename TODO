# Build

- Analyze package size

# Bugs

- Clone PayloadDetails when cloning BufferProps (and also add clone method to underlying PayloadDescription)

- Move TS-demuxer to worker-proxy mode

- Use proc-task workers for crypto-like things for example

- Remove hardcoded worker binary paths (make configurable)

# Use-Cases

- Method to create "grow" new BufferSlice from original data and (list of) additional slices

- Tool for "online" mp4 / TS / web analysis and diff :)

- AAC parse-proc (like for h264)

# Model design

- Take care of mime-types and 4cc codec strings properly

- Remove all the "hard-coded" litteral strings and use codec string enums

- Remove all the litteral numbers (especially duplicated values) and replace by const vars

# Architecture

- Ref-counting of packets via socket transfers (and sealing?)

- "Seal" processor (no more sockets added/removed)

- "Block" sockets data flow / Socket "probes" / "filters"

- FIFO buffering on sockets (also for when not connected yet)

- RAII all the things

- Handle async proc initialization
  -> Handle case like: where MP4-muxer releases codec-info after
     parsing first bits and MediaSource can only be initialized async
  -> Socket has now `whenReady` promise to handle the async-io-socket case in a non-blocking-RAII-like way

# Debugging

- Apply lint rules / Remove console logs

- Filterable logs (configure some env var at build time parsed into respective logger cat-instances)

# Testing

- Generalize test-case for flows that take URL as entry point

- Automate running web test-cases

- Seperate compile of procs and core

- Essentialize/Cleanup Hlsjs-parser/muxer-parts

